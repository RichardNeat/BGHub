@using BGHub.Models
@rendermode InteractiveAuto

@if (loggedInUser != null)
{
    <div class="card shadow-sm p-3 mt-4 mb-4">
        <div class="card-body">
            <h6 class="card-title mb-3">Bring a game to this event:</h6>

            <EditForm Model="Model" OnValidSubmit="HandleValidSubmit" FormName="BringGame">
                <div class="mb-3">
                        <InputSelect @bind-Value="selectedGameId" id="gameSelect" class="form-select">
                            <option selected value="0">-- Select a Game --</option>
                            @foreach (var game in loggedInUser.Games)
                            {
                                <option disabled="@EventInventory.FirstOrDefault(g => g.Id == game.Id)" value="@game.Id">
                                    @game.Name @(EventInventory.FirstOrDefault(g => g.Id == game.Id) != null ? "(Already on the list!)" : "")
                                </option>
                            }
                        </InputSelect>
                </div>

                <button type="submit" disabled="@(selectedGameId == 0)" class="btn btn-primary w-100">Add Game</button>
            </EditForm>
        </div>
    </div>
}
else
{
    <p>Please login to interact with this event</p>
}

@code {
    public Game Model = new();

    private int selectedGameId { get; set; }

    [Parameter] public List<Game> EventInventory { get; set; }

    [CascadingParameter] private User? loggedInUser { get; set; }

    [Parameter] public EventCallback<Game> HandleGameAdded { get; set; }

    public async Task HandleValidSubmit()
    {
        var selectedGame = loggedInUser.Games.FirstOrDefault(g => g.Id == selectedGameId);
        await HandleGameAdded.InvokeAsync(selectedGame);
        selectedGameId = 0;
        // Call to DB to add game to event
    }
}
