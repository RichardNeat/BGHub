@using BGHub.FE.Client.Models
@using BGHub.Models
@inject IJSRuntime JSRuntime

<li class="mb-4">
    <div class="card shadow-sm rounded">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">@EventGame.Game.Name</h5>
        </div>
        <div class="card-body">
            <p class="card-text text-muted">Owned by: @EventGame.Game.Owner.Name</p>
        </div>
        <img src="@EventGame.Game.ImageUrl" alt="@EventGame.Game.Name box art" class="img-fluid rounded mb-3 card-img" />
        @if (loggedInUser != null)
        {
            @if (EventGame.Game.Owner.Id == loggedInUser.Id)
            {
                <button @onclick="ConfirmDeleteGame" class="btn btn-danger btn-sm mt-2">Remove</button>
            }
        }
    </div>
</li>

@code {
    [CascadingParameter] private User? loggedInUser { get; set; }

    [Parameter] public EventGame EventGame { get; set; }

    [Parameter] public EventCallback<int> OnGameDeleted { get; set; }

    private async Task ConfirmDeleteGame()
    {
        bool isConfirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to remove {EventGame.Game.Name} from this event?");

        if (isConfirmed)
        {
            await DeleteGame();
        }
    }

    private async Task DeleteGame()
    {
        await OnGameDeleted.InvokeAsync(EventGame.Id);
    }
}
