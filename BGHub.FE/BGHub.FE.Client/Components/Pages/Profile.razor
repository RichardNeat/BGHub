@page "/profile"
@using BGHub.FE.Client.Components.ProfileComponents
@using BGHub.Models
@using Utils
@rendermode InteractiveServer

@if (IsLoading)
{
    <p>Loading profile...</p>
}
else
{
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-4">
                <div class="card shadow-lg border-0 rounded-lg">
                    <div class="card-header bg-dark text-white text-center">
                        <h4 class="card-title fw-bold">@loggedInUser.Name</h4>
                        <p class="fs-5">
                            <i class="bi bi-person-circle me-2"></i>
                            BGG Username: <strong>@loggedInUser.BGGUsername</strong>
                        </p>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card shadow-lg border-0 rounded-lg">
                    <div class="card-body">
                        <AddGameForm OwnedGames="loggedInUser.Games" OnGameAdded="AddGameToCollection" RegisteredGames="RegisteredGames" />
                    </div>

                    <div class="card-body">
                        <FindGameForm RegisteredGames="RegisteredGames" OnGameSelected="AddNewGameToRegisteredAndCollection" />
                    </div>

                    <div class="card-header bg-dark text-white">
                        <h5 class="mb-0 d-flex align-items-center">
                            🎲 My Board Games
                        </h5>
                    </div>

                    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                        @if (loggedInUser.Games != null && loggedInUser.Games.Any())
                        {
                            <ul class="list-group">
                                @foreach (var game in loggedInUser.Games)
                                {
                                    <GameCard Game="game" OnDeleteGame="RemoveGameFromCollection" />
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted text-center">No games added yet.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [CascadingParameter] public User loggedInUser { get; set; }

    public List<Game> RegisteredGames { get; set; }

    public bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        var client = new HttpClient();

        var result = await client.GetFromJsonAsync<List<Game>>($"{Utils.BASE_API_URL}/Games");

        RegisteredGames = result;

        IsLoading = false;
    }

    public void RemoveGameFromCollection(int id)
    {
        var gameToDelete = loggedInUser.Games.FirstOrDefault(g => g.Id == id);
        loggedInUser.Games.Remove(gameToDelete);
    }

    public void AddGameToCollection(int id)
    {
        var gameToAdd = RegisteredGames.FirstOrDefault(g => g.Id == id);
        loggedInUser.Games.Insert(0, gameToAdd);
    }

    public void AddNewGameToRegisteredAndCollection(Game newGame)
    {
        RegisteredGames.Add(newGame);
        RegisteredGames.OrderBy(g => g.Name);
        AddGameToCollection(newGame.Id);
    }
}
